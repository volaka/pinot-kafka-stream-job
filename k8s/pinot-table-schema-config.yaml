apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-test
  namespace: pinot
data:
  kafkaTest_realtime_table_config.json: |-
    {
      "tableName": "kafka-test",
      "tableType": "REALTIME",
      "segmentsConfig": {
        "schemaName": "kafka-testtest",
        "timeColumnName": "time",
        "replication": "1",
        "replicasPerPartition": "1",
        "retentionTimeUnit": null,
        "retentionTimeValue": null,
        "completionConfig": null,
        "crypterClassName": null,
        "peerSegmentDownloadScheme": null
      },
      "tenants": {},
      "tableIndexConfig": {
        "loadMode": "MMAP",
        "streamConfigs": {
          "streamType": "kafka",
          "stream.kafka.consumer.type": "simple",
          "stream.kafka.topic.name": "kafka-test",
          "stream.kafka.decoder.class.name": "org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
          "stream.kafka.consumer.factory.class.name": "org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
          "stream.kafka.hlc.zk.connect.string": "kafka-dev-zookeeper:2181",
          "stream.kafka.zk.broker.url": "kafka-dev-zookeeper:2181",
          "stream.kafka.broker.list": "kafka-dev:9092",
          "realtime.segment.flush.threshold.time": "3600000",
          "realtime.segment.flush.threshold.size": "50000",
          "stream.kafka.consumer.prop.auto.offset.reset": "smallest"
        }
      },
      "metadata": {
        "customConfigs": {}
      }
    }

  kafkaTest_schema.json: |-
    {
    "metricFieldSpecs": [
    ],
    "dimensionFieldSpecs": [
      {
      "name": "message",
      "dataType": "STRING"
      }
    ],
    "dateTimeFieldSpecs": [
      {
      "name": "time",
      "dataType": "LONG",
      "format": "1:MILLISECONDS:EPOCH",
      "granularity": "1:MILLISECONDS"
      }
    ],
    "schemaName": "kafka-test"
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: pinot-realtime-quickstart-pinot-table-creation
  namespace: pinot
spec:
  template:
    spec:
      containers:
        - name: pinot-add-example-realtime-table-json
          image: apachepinot/pinot:latest
          args:
            [
              "AddTable",
              "-schemaFile",
              "/var/pinot/kafka-test/kafkaTest_schema.json",
              "-tableConfigFile",
              "/var/pinot/kafka-test/kafkaTest_realtime_table_config.json",
              "-controllerHost",
              "pinot-dev-controller",
              "-controllerPort",
              "9000",
              "-exec",
            ]
          env:
            - name: JAVA_OPTS
              value: "-Xms4G -Xmx4G -Dpinot.admin.system.exit=true"
          volumeMounts:
            - name: kafka-test
              mountPath: /var/pinot/kafka-test
      restartPolicy: OnFailure
      volumes:
        - name: kafka-test
          configMap:
            name: kafka-test
  backoffLimit: 100